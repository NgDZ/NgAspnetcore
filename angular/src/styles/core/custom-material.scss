@mixin app-custom-material-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  $config: mat-get-color-config($theme);
  // Extract the palettes you need from the theme definition.
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);
  $warn: map-get($config, warn);

  .mat-actions {
    background-color: mat-color($background, background) !important;
    color: mat-color($foreground, text);
    box-shadow: 0px 0px 0px 1px mat-color($foreground, divider) !important;
  }
  .mat-text {
    &.secondary,
    .secondary {
      color: mat-color($foreground, secondary-text);
    }
  }
  .mat-bg-primary,
  .nav .primary {
    background: mat-color($primary);
    color: mat-color($primary, default-contrast);
  }
  .mat-color-primary {
    color: mat-color($primary) !important;
  }
  .mat-bg-accent,
  .nav .accent {
    background: mat-color($accent) !important;
    color: mat-color($accent, default-contrast) !important;
  }
  .mat-color-accent {
    color: mat-color($accent) !important;
  }
  .mat-bg-warn,
  .nav .warn {
    background: mat-color($warn);
    color: mat-color($warn, default-contrast);
  }
  .mat-color-warn {
    color: mat-color($warn) !important;
  }

  .alert {
    padding: 0.5em;
    &.alert-primary {
      background: mat-color($primary);
      color: mat-color($primary, default-contrast);
      border-color: mat-color($primary);
    }

    &.alert-secondary,
    &.alert-accent {
      background: mat-color($accent);
      color: mat-color($accent, default-contrast);
      border-color: mat-color($accent);
    }
    &.alert-info {
      background: mat-color($mat-blue, 500);
      color: mat-color(mat-palette($mat-blue, 500), default-contrast);
      border-color: mat-color($mat-blue, 500);
    }

    &.alert-success {
      background: mat-color(mat-palette($mat-green, 500));
      color: mat-color(mat-palette($mat-green, 500), default-contrast);
      border-color: mat-color(mat-palette($mat-green, 500));
    }

    &.alert-warning,
    &.alert-warn {
      background: mat-color(mat-palette($mat-orange, 500));
      color: mat-color(mat-palette($mat-orange, 500), default-contrast);
      border-color: mat-color(mat-palette($mat-orange, 500));
    }

    &.alert-danger,
    &.alert-error,
    &.alert-fatal {
      background: mat-color(mat-palette($mat-red, 500));
      color: mat-color(mat-palette($mat-red, 500), default-contrast);
      border-color: mat-color(mat-palette($mat-red, 500));
    }
    &.alert-light {
      background: mat-color(mat-palette($mat-red, 500));
      color: mat-color(mat-palette($mat-red, 500), default-contrast);
      border-color: mat-color(mat-palette($mat-red, 500));
    }
    &.alert-dark {
      background: mat-color(mat-palette($mat-red, 500));
      color: mat-color(mat-palette($mat-red, 500), default-contrast);
      border-color: mat-color(mat-palette($mat-red, 500));
    }
  }

  .color-primary {
    color: mat-color($primary);
  }

  .color-secondary,
  .color-accent {
    color: mat-color($accent);
  }
  .color-info {
    color: mat-color($mat-blue, 500);
  }

  .color-success {
    color: mat-color(mat-palette($mat-green, 500));
  }

  .color-warning,
  .color-warn {
    color: mat-color(mat-palette($mat-orange, 500));
  }

  .color-danger,
  .color-error,
  .color-fatal {
    color: mat-color(mat-palette($mat-red, 500));
  }
  .color-light {
    color: mat-color(mat-palette($mat-red, 500));
  }
  .color-dark {
    color: mat-color(mat-palette($mat-red, 500));
  }
  .mat-hover:hover {
    &:not([disabled]) {
      background: mat-color($background, "hover");
      cursor: pointer;
      position: relative;
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Avatar
  // -----------------------------------------------------------------------------------------------------
  .avatar {
    color: map-get($foreground, text);
  }

  // -----------------------------------------------------------------------------------------------------
  // @ Forms
  // -----------------------------------------------------------------------------------------------------
  .form-wrapper {
    background-color: map-get($background, card);
  }

  .mat-divider-h,
  .mat-divider-v {
    background: map-get($foreground, divider);
  }
}

.mat-divider-v {
  width: 100%;
  height: 1px;
}

.mat-divider-h {
  width: 1px;
  height: 100%;
}
.p-0 {
  .mat-dialog-container {
    padding: 0 !important;
  }
}
